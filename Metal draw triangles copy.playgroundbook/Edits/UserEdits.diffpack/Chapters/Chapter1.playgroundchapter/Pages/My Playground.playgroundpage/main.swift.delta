<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import SwiftUI
import MetalKit
import PlaygroundSupport

class DelegateRenderer : NSObject, MTKViewDelegate
{
    var commandQueue : MTLCommandQueue!
    var device : MTLDevice!
    
    init(device: MTLDevice?) {
        self.device = device
        commandQueue = self.device?.makeCommandQueue()
    }
    
    func mtkView(_ view: MTKView, drawableSizeWillChange size: CGSize) {
        //print("size")
        //draw(in: view)
    }
    
    func draw(in view: MTKView) {
        
        //print("draw")
        view.device = device
        guard let renderPassDescriptor = view.currentRenderPassDescriptor else {return}
        guard let drawable = view.currentDrawable else {return}
        let commandBuffer = commandQueue?.makeCommandBuffer()
        let commandEncoder = commandBuffer?.makeRenderCommandEncoder(descriptor: renderPassDescriptor)
        
        commandEncoder?.endEncoding()
        
        commandBuffer?.present(drawable)
        
        commandBuffer?.commit()
        
    }
}

class MetalView :MTKView {
    
    
    override init(frame frameRect: CGRect, device: MTLDevice?) {
        
        super.init(frame: frameRect, device: device)
        
        self.clearColor = MTLClearColorMake(0.0, 0.0, 1.0, 1.0)
        
        self.isPaused = false
        self.enableSetNeedsDisplay = false 
        
        let delegate = DelegateRenderer(device: device)
        self.delegate = delegate
        
        //print(delegate)
        //print(self.delegate)
        //self.delegate?.draw(in: self)
    }
    
    required init(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
}


struct ContentView: View {
    
    var body: some View {
        let frame = CGRect(x: 0, y: 0, width: 100, height: 100)
        var mView = MetalView(frame: frame)
    }
}

let frame = CGRect(x: 0, y: 0, width: 100, height: 100)
let device = MTLCreateSystemDefaultDevice()

let metalView = MetalView(frame: frame)
let delegate = DelegateRenderer(device: device)
metalView.delegate = delegate


PlaygroundPage.current.setLiveView(metalView) 
</string>
			<key>ModifiedRange</key>
			<string>{1, 2100}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
